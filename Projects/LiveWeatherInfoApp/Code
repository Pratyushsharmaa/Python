import requests
import json
import matplotlib.pyplot as plt

def get_weather_data(city_name, api_key):
    """Fetch weather data from OpenWeatherMap API for a given city."""
    base_url = "http://api.openweathermap.org/data/2.5/weather?"
    complete_url = f"{base_url}q={city_name}&appid={api_key}&units=metric"  # Metric units for temperature in Celsius
    response = requests.get(complete_url)
    
    if response.status_code == 200:
        # If the response was successful, parse the JSON
        return response.json()
    else:
        # In case of any error
        print(f"Error: Unable to fetch weather data for {city_name}")
        return None

def display_weather_info(weather_data):
    """Display the weather information in a user-friendly format."""
    city = weather_data["name"]
    country = weather_data["sys"]["country"]
    weather = weather_data["weather"][0]["description"]
    temp = weather_data["main"]["temp"]
    temp_min = weather_data["main"]["temp_min"]
    temp_max = weather_data["main"]["temp_max"]
    humidity = weather_data["main"]["humidity"]
    wind_speed = weather_data["wind"]["speed"]
    pressure = weather_data["main"]["pressure"]

    # Print the weather information
    print(f"\nWeather information for {city}, {country}:")
    print(f"Weather: {weather}")
    print(f"Temperature: {temp}°C (Min: {temp_min}°C, Max: {temp_max}°C)")
    print(f"Humidity: {humidity}%")
    print(f"Wind Speed: {wind_speed} m/s")
    print(f"Pressure: {pressure} hPa")
    print("-" * 30)

    # Call the function to plot the weather data
    plot_weather_data(city, temp, temp_min, temp_max, humidity, wind_speed, pressure)

def plot_weather_data(city, temp, temp_min, temp_max, humidity, wind_speed, pressure):
    """Create multiple plots to visualize weather data."""
    
    # Create a figure with multiple subplots
    fig, axs = plt.subplots(1, 3, figsize=(15, 5))
    fig.suptitle(f"Weather Data Visualization for {city}", fontsize=16)

    # 1. Bar chart for temperature (current, min, max)
    axs[0].bar(['Temp', 'Min Temp', 'Max Temp'], [temp, temp_min, temp_max], color=['skyblue', 'lightblue', 'deepskyblue'])
    axs[0].set_title('Temperature (°C)')
    axs[0].set_ylabel('Temperature (°C)')
    
    # Adding value labels on top of bars
    for i, value in enumerate([temp, temp_min, temp_max]):
        axs[0].text(i, value + 0.5, f"{value}", ha='center', fontsize=10)

    # 2. Pie chart for Humidity and Wind Speed proportions
    axs[1].pie([humidity, 100 - humidity], labels=['Humidity', 'Remaining'],
               autopct='%1.1f%%', colors=['lightgreen', 'lightgrey'], startangle=90)
    axs[1].set_title('Humidity Distribution')

    # 3. Line chart for wind speed and pressure
    axs[2].plot(['Wind Speed (m/s)', 'Pressure (hPa)'], [wind_speed, pressure], marker='o', color='coral', linestyle='-')
    axs[2].set_title('Wind Speed & Pressure')
    axs[2].set_ylabel('Values')

    # Show the entire plot
    plt.tight_layout(rect=[0, 0, 1, 0.95])  # Adjust layout for title
    plt.show()

def main():
    # Your OpenWeatherMap API key
    api_key = "6d0ed101f38ddf1cc5244083b771bab1"

    print("Welcome to the Enhanced Weather Information App!")
    while True:
        city_name = input("\nEnter the name of the city (or type 'exit' to quit): ")
        
        if city_name.lower() == 'exit':
            print("Exiting the app. Have a nice day!")
            break
        
        weather_data = get_weather_data(city_name, api_key)
        
        if weather_data:
            display_weather_info(weather_data)

if __name__ == "__main__":
    main()
